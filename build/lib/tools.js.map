{
  "version": 3,
  "sources": ["../../src/lib/tools.ts"],
  "sourcesContent": ["/**\n * Parse a hex or decimal number string.\n * @param num The number as a string (e.g. 0x42 or 127)\n * @return    The parsed number\n */\nexport function parseNumber (num: string): number {\n  if (num.startsWith('0x')) {\n    return parseInt(num, 16);\n  } else {\n    return parseInt(num, 10);\n  }\n}\n\n/**\n * Parse an address to a string.\n * @param addr The address as a hex or decimal number string or `*`.\n * @return     The address as a number or null if `addr` was `*`.\n */\nexport function parseAddress (addr: number | string): number | null {\n  if (typeof addr === 'number') return addr;\n  if (addr === '*') return null;\n  return parseNumber(addr);\n}\n\n/**\n * Format a number as a hex number string.\n * @param num The number.\n * @retrun    The hex number with leading `0x`.\n */\nexport function hexNumber (num: number): string {\n  let s = num.toString(16).toUpperCase();\n  if (s.length < 2) {\n    s = '0' + s;\n  }\n  return '0x' + s;\n}\n\n/**\n * Round a floating point number to the given precision.\n * @param num       The number.\n * @param precision The number of decimals to round to.\n * @return          The rounded number.\n */\nexport function round (num: number, precision: number): number {\n  if (precision === 0) return Math.round(num);\n\n  let exp = 1;\n  for (let i = 0; i < precision; i++) {\n    exp *= 10;\n  }\n\n  return Math.round(num * exp) / exp;\n}\n\n/**\n * Format a buffer as a hex string.\n * @param buf The buffer to format.\n * @return    A string with the buffer content as hex numbers separated by spaces.\n */\nexport function formatBufferAsHexString (buf: Buffer): string {\n  return buf.toString('hex').toUpperCase().replace(/(..)/g, ' 0x$1').trim();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKO,SAAS,YAAa,KAAqB;AAChD,MAAI,IAAI,WAAW,IAAI,GAAG;AACxB,WAAO,SAAS,KAAK,EAAE;AAAA,EACzB,OAAO;AACL,WAAO,SAAS,KAAK,EAAE;AAAA,EACzB;AACF;AAOO,SAAS,aAAc,MAAsC;AAClE,MAAI,OAAO,SAAS,SAAU,QAAO;AACrC,MAAI,SAAS,IAAK,QAAO;AACzB,SAAO,YAAY,IAAI;AACzB;AAOO,SAAS,UAAW,KAAqB;AAC9C,MAAI,IAAI,IAAI,SAAS,EAAE,EAAE,YAAY;AACrC,MAAI,EAAE,SAAS,GAAG;AAChB,QAAI,MAAM;AAAA,EACZ;AACA,SAAO,OAAO;AAChB;AAQO,SAAS,MAAO,KAAa,WAA2B;AAC7D,MAAI,cAAc,EAAG,QAAO,KAAK,MAAM,GAAG;AAE1C,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,WAAO;AAAA,EACT;AAEA,SAAO,KAAK,MAAM,MAAM,GAAG,IAAI;AACjC;AAOO,SAAS,wBAAyB,KAAqB;AAC5D,SAAO,IAAI,SAAS,KAAK,EAAE,YAAY,EAAE,QAAQ,SAAS,OAAO,EAAE,KAAK;AAC1E;",
  "names": []
}
